class Solution:

    def generateBinary(self, n):
        res = []
        q = deque()

        # Enqueue the first binary number
        q.append("1")

        # This loop is like BFS of a tree with 1 as root
        # 0 as left child and 1 as right child and so on
        while n > 0:
            # print the front of queue
            s1 = q.popleft()
            res.append(s1)

            s2 = s1

            # Append "0" to s1 and enqueue it.
            q.append(s1 + "0")

            # Append "1" to s2 and enqueue it.
            q.append(s2 + "1")

            n -= 1

        return res
